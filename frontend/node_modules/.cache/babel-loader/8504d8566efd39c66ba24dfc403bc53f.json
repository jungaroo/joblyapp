{"ast":null,"code":"import _slicedToArray from \"/Users/orlando/Projects/Rithm/Projects/jobly/jobly/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/orlando/Projects/Rithm/Projects/jobly/jobly/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/orlando/Projects/Rithm/Projects/jobly/jobly/src/NavBarComponents/Login.js\";\nimport React, { Component } from 'react';\nimport JoblyApi from '../JoblyApi';\nimport './Login.css';\nimport { withRouter } from 'react-router';\n/** Component that renders log in / registration Form  */\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: false,\n      // If true, will show email, first_name and last_name for registration\n      username: '',\n      password: '',\n      email: '',\n      first_name: '',\n      last_name: '',\n      invalid: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleNew = this.toggleNew.bind(this);\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault(); // Grab a token - either from registration or loggin in\n\n    let token, username;\n\n    try {\n      if (this.state.newUser) {\n        // Remove the newUser and invalid keys from state\n        let _this$state = this.state,\n            newUser = _this$state.newUser,\n            invalid = _this$state.invalid,\n            user = _objectWithoutProperties(_this$state, [\"newUser\", \"invalid\"]);\n\n        var _ref = await JoblyApi.registerUser(user);\n\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        token = _ref2[0];\n        username = _ref2[1];\n      } else {\n        var _ref3 = await JoblyApi.loginUser(this.state.username, this.state.password);\n\n        var _ref4 = _slicedToArray(_ref3, 2);\n\n        token = _ref4[0];\n        username = _ref4[1];\n      }\n\n      if (token) {\n        this.props.login(token, username);\n        this.props.history.push('/');\n      }\n    } catch (err) {\n      this.setState({\n        invalid: err\n      });\n    } // Successful log in / registration\n\n  }\n\n  toggleNew() {\n    this.setState({\n      newUser: !this.state.newUser\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    // Extra Fields for registration\n    const newForm = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"first_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"first_name\",\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Enter First Name here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"last_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"last_name\",\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Enter Last Name here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"email\",\n      className: \"form-control\",\n      type: \"email\",\n      placeholder: \"Enter Email here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      className: \"py-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card mx-auto\",\n      style: {\n        width: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-secondary register\",\n      onClick: this.toggleNew,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.newUser ? 'Log In' : 'No account yet? Register'), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"username\",\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Enter username here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"password\",\n      className: \"form-control\",\n      type: \"password\",\n      placeholder: \"Enter password here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), this.state.newUser ? newForm : '', React.createElement(\"button\", {\n      className: \"btn btn-success my-2 my-sm-0\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.newUser ? 'Register' : 'Log In'))), this.state.invalid ? React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.invalid) : ''));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/orlando/Projects/Rithm/Projects/jobly/jobly/src/NavBarComponents/Login.js"],"names":["React","Component","JoblyApi","withRouter","Login","constructor","props","state","newUser","username","password","email","first_name","last_name","invalid","handleSubmit","bind","handleChange","toggleNew","e","preventDefault","token","user","registerUser","loginUser","login","history","push","err","setState","target","name","value","render","newForm","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport JoblyApi from '../JoblyApi';\nimport './Login.css';\nimport { withRouter } from 'react-router';\n\n/** Component that renders log in / registration Form  */\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: false, // If true, will show email, first_name and last_name for registration\n      username: '',\n      password: '',\n      email: '',\n      first_name: '',\n      last_name: '',\n      invalid: false\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleNew = this.toggleNew.bind(this);\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n\n    // Grab a token - either from registration or loggin in\n    let token, username;\n    try {\n      if (this.state.newUser) {\n        // Remove the newUser and invalid keys from state\n        let { newUser, invalid, ...user } = this.state;\n        [token, username] = await JoblyApi.registerUser(user);\n      } else {\n        [token, username] = await JoblyApi.loginUser(this.state.username, this.state.password);\n      }\n\n      if (token) {\n        this.props.login(token, username);\n        this.props.history.push('/')\n      }\n    } catch(err) {\n      this.setState({ invalid: err});\n    }\n\n    // Successful log in / registration\n  }\n\n  toggleNew() {\n    this.setState({ newUser: !this.state.newUser })\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n\n  render() {\n\n    // Extra Fields for registration\n    const newForm = (\n      <React.Fragment>\n\n        <div className=\"form-group mb-3\">\n          <label htmlFor=\"first_name\">First Name</label>\n          <input onChange={this.handleChange} name=\"first_name\" className=\"form-control\" type=\"text\" placeholder=\"Enter First Name here\" />\n        </div>\n\n        <div className=\"form-group mb-3\">\n          <label htmlFor=\"last_name\">Last Name</label>\n          <input onChange={this.handleChange} name=\"last_name\" className=\"form-control\" type=\"text\" placeholder=\"Enter Last Name here\" />\n        </div>\n\n        <div className=\"form-group mb-5\">\n          <label htmlFor=\"email\">Email</label>\n          <input onChange={this.handleChange} name=\"email\" className=\"form-control\" type=\"email\" placeholder=\"Enter Email here\" />\n        </div>\n      </React.Fragment>)\n\n    return (\n      <div className=\"py-5\">\n        <div className=\"card mx-auto\" style={{ width: \"30rem\" }}>\n\n          <button\n            className=\"btn btn-outline-secondary register\"\n            onClick={this.toggleNew}>{this.state.newUser ? 'Log In' : 'No account yet? Register'}\n          </button>\n          <div className=\"card-body\">\n            {/* Button to toggle Log In vs Registration */}\n\n            <form onSubmit={this.handleSubmit}>\n\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"username\">Username</label>\n                <input onChange={this.handleChange} name=\"username\" className=\"form-control\" type=\"text\" placeholder=\"Enter username here\" />\n              </div>\n\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"password\">Password</label>\n                <input onChange={this.handleChange} name=\"password\" className=\"form-control\" type=\"password\" placeholder=\"Enter password here\" />\n              </div>\n\n              {this.state.newUser ? newForm : ''}\n\n              <button className=\"btn btn-success my-2 my-sm-0\" type=\"submit\">{this.state.newUser ? 'Register' : 'Log In'}</button>\n\n            </form>\n          </div>\n        {this.state.invalid ? <div className=\"alert alert-danger\" role=\"alert\">\n          {this.state.invalid}\n          </div> : ''}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}