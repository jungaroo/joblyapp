{"ast":null,"code":"var _jsxFileName = \"/Users/orlando/Projects/Rithm/Projects/jobly/jobly/src/Routes/Routes.js\";\nimport React, { Component } from 'react';\nimport { Route, BrowserRouter, Switch, Redirect } from 'react-router-dom';\nimport Navbar from '../NavBarComponents/Navbar';\nimport Companies from '../CompanyComponents/Companies';\nimport Company from '../CompanyComponents/Company';\nimport Jobs from '../JobComponents/Jobs';\nimport Home from '../Home';\nimport Profile from '../NavBarComponents/Profile';\nimport Login from '../NavBarComponents/Login';\nimport PrivateRoute from './PrivateRoute';\nimport UserContext from './UserContext';\nimport './Routes.css';\nexport default class Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    };\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      isLoggedIn: localStorage.getItem('token') ? true : false\n    });\n  }\n\n  login(token, username) {\n    // Set local storage \n    localStorage.setItem('token', token);\n    localStorage.setItem('username', username);\n    this.setState({\n      isLoggedIn: true\n    });\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    this.setState({\n      isLoggedIn: false\n    });\n  }\n\n  render() {\n    const isLoggedIn = this.state.isLoggedIn;\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(UserContext.Provider, {\n      value: {\n        username: localStorage.getItem('username')\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      isLoggedIn: isLoggedIn,\n      logout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        isLoggedIn: isLoggedIn,\n        login: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/companies\",\n      render: () => React.createElement(Companies, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/company/:handle\",\n      render: () => React.createElement(Company, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/jobs\",\n      render: () => React.createElement(Jobs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/profile\",\n      render: () => React.createElement(Profile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })))));\n  }\n\n}\nRoutes.contextType = UserContext;","map":{"version":3,"sources":["/Users/orlando/Projects/Rithm/Projects/jobly/jobly/src/Routes/Routes.js"],"names":["React","Component","Route","BrowserRouter","Switch","Redirect","Navbar","Companies","Company","Jobs","Home","Profile","Login","PrivateRoute","UserContext","Routes","constructor","props","state","isLoggedIn","login","bind","logout","componentWillMount","setState","localStorage","getItem","token","username","setItem","removeItem","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, BrowserRouter, Switch, Redirect } from 'react-router-dom'\n\nimport Navbar from '../NavBarComponents/Navbar';\nimport Companies from '../CompanyComponents/Companies';\nimport Company from '../CompanyComponents/Company';\nimport Jobs from '../JobComponents/Jobs';\nimport Home from '../Home';\nimport Profile from '../NavBarComponents/Profile';\nimport Login from '../NavBarComponents/Login';\n\nimport PrivateRoute from './PrivateRoute';\nimport UserContext from './UserContext';\nimport './Routes.css';\n\nexport default class Routes extends Component {\n  static contextType = UserContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    }\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      isLoggedIn: localStorage.getItem('token') ? true : false\n    });\n  }\n\n  login(token, username) {\n\n    // Set local storage \n    localStorage.setItem('token', token);\n    localStorage.setItem('username', username);\n\n    this.setState({ isLoggedIn: true });\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    this.setState({ isLoggedIn: false });\n  }\n\n  render() {\n    const { isLoggedIn } = this.state;\n\n    return (\n      <BrowserRouter>\n        <UserContext.Provider value={{ username: localStorage.getItem('username') }}>\n          <Navbar isLoggedIn={isLoggedIn} logout={this.logout} />\n          <main>\n            <Switch>\n              <Route\n                exact path='/login'\n                render={() => <Login isLoggedIn={isLoggedIn} login={this.login} />} />\n              <Route exact path='/' render={() => <Home />} />\n\n              <PrivateRoute exact path='/companies' render={() => <Companies />} />\n              <PrivateRoute path='/company/:handle' render={() => <Company />} />\n              <PrivateRoute exact path='/jobs' render={() => <Jobs />} />\n              <PrivateRoute exact path='/profile' render={() => <Profile />} />\n\n              <Redirect to=\"/\" />\n            </Switch>\n          </main>\n        </UserContext.Provider>\n      </BrowserRouter >\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}