{"ast":null,"code":"import _objectSpread from \"/Users/orlando/Projects/Rithm/Projects/jobly/jobly/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/orlando/Projects/Rithm/Projects/jobly/jobly/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/orlando/Projects/Rithm/Projects/jobly/jobly/src/CompanyComponents/Company.js\";\nimport React, { Component } from 'react';\nimport JoblyApi from '../JoblyApi';\nimport JobCard from '../JobComponents/JobCard';\nimport uuid from 'uuid/v4';\nimport { withRouter } from \"react-router\";\n\nclass Company extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      company: {}\n    };\n    this.handleApplication = this.handleApplication.bind(this);\n  }\n\n  async componentWillMount() {\n    const handle = this.props.match.params.handle;\n    const username = localStorage.getItem('username'); // This will grab all the jobs available as well as the users\n\n    const promises = [JoblyApi.getCompany(handle), JoblyApi.getUser(username)];\n\n    let _ref = await Promise.all(promises),\n        _ref2 = _slicedToArray(_ref, 2),\n        company = _ref2[0],\n        user = _ref2[1];\n\n    const appliedJobIds = new Set(user.jobs.map(j => j.id)); // O ( m + n)\n\n    let jobs = company.jobs;\n    jobs = jobs.map(job => {\n      return appliedJobIds.has(job.id) ? _objectSpread({}, job, {\n        key: uuid(),\n        applied: true\n      }) : _objectSpread({}, job, {\n        key: uuid(),\n        applied: false\n      });\n    });\n    company.jobs = jobs;\n    this.setState({\n      company\n    });\n  }\n\n  async handleApplication(jobid) {\n    const username = localStorage.getItem('username');\n    await JoblyApi.applyToJob(jobid, username, 'applied');\n    const jobs = this.state.company.jobs;\n    let updatedJobs = jobs.map(j => {\n      if (j.id === +jobid) {\n        j.applied = true;\n      }\n\n      return j;\n    });\n    this.setState({\n      company: _objectSpread({}, this.state.company, {\n        jobs: updatedJobs\n      })\n    });\n  }\n\n  render() {\n    const _this$state$company = this.state.company,\n          name = _this$state$company.name,\n          handle = _this$state$company.handle,\n          description = _this$state$company.description,\n          jobs = _this$state$company.jobs;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"py-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.handleClick,\n      className: \"card mx-auto py2 CompBG\",\n      style: {\n        width: \"50rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Company Profile\"), React.createElement(\"div\", {\n      className: \"card-body ThickFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" \", name, \" \"), React.createElement(\"h6\", {\n      className: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" \", handle, \" \"), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" \", description, \" \")))), jobs ? jobs.map(job => React.createElement(JobCard, Object.assign({\n      handleApplication: this.handleApplication,\n      key: job.key\n    }, job, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))) : \"Nothing\");\n  }\n\n}\n\nexport default withRouter(Company);","map":{"version":3,"sources":["/Users/orlando/Projects/Rithm/Projects/jobly/jobly/src/CompanyComponents/Company.js"],"names":["React","Component","JoblyApi","JobCard","uuid","withRouter","Company","constructor","props","state","company","handleApplication","bind","componentWillMount","handle","match","params","username","localStorage","getItem","promises","getCompany","getUser","Promise","all","user","appliedJobIds","Set","jobs","map","j","id","job","has","key","applied","setState","jobid","applyToJob","updatedJobs","render","name","description","handleClick","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAE9BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAIA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAED,QAAMC,kBAAN,GAA2B;AAAA,UACjBC,MADiB,GACN,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MADX,CACjBF,MADiB;AAEzB,UAAMG,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB,CAFyB,CAKzB;;AACA,UAAMC,QAAQ,GAAG,CAAClB,QAAQ,CAACmB,UAAT,CAAoBP,MAApB,CAAD,EAA8BZ,QAAQ,CAACoB,OAAT,CAAiBL,QAAjB,CAA9B,CAAjB;;AANyB,eAQH,MAAMM,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CARH;AAAA;AAAA,QAQpBV,OARoB;AAAA,QAQXe,IARW;;AAUzB,UAAMC,aAAa,GAAG,IAAIC,GAAJ,CAAQF,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAcC,CAAC,IAAIA,CAAC,CAACC,EAArB,CAAR,CAAtB,CAVyB,CAWzB;;AAEA,QAAIH,IAAI,GAAGlB,OAAO,CAACkB,IAAnB;AACAA,IAAAA,IAAI,GAAGA,IAAI,CAACC,GAAL,CAASG,GAAG,IAAI;AACrB,aAAON,aAAa,CAACO,GAAd,CAAkBD,GAAG,CAACD,EAAtB,sBACDC,GADC;AACIE,QAAAA,GAAG,EAAE9B,IAAI,EADb;AACiB+B,QAAAA,OAAO,EAAE;AAD1B,6BAEDH,GAFC;AAEIE,QAAAA,GAAG,EAAE9B,IAAI,EAFb;AAEiB+B,QAAAA,OAAO,EAAE;AAF1B,QAAP;AAGD,KAJM,CAAP;AAMAzB,IAAAA,OAAO,CAACkB,IAAR,GAAeA,IAAf;AAEA,SAAKQ,QAAL,CAAc;AAAC1B,MAAAA;AAAD,KAAd;AACD;;AAED,QAAMC,iBAAN,CAAwB0B,KAAxB,EAA+B;AAG7B,UAAMpB,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,UAAMjB,QAAQ,CAACoC,UAAT,CAAoBD,KAApB,EAA2BpB,QAA3B,EAAqC,SAArC,CAAN;AAJ6B,UAMrBW,IANqB,GAMZ,KAAKnB,KAAL,CAAWC,OANC,CAMrBkB,IANqB;AAO7B,QAAIW,WAAW,GAAGX,IAAI,CAACC,GAAL,CAASC,CAAC,IAAI;AAC9B,UAAIA,CAAC,CAACC,EAAF,KAAS,CAACM,KAAd,EAAqB;AACnBP,QAAAA,CAAC,CAACK,OAAF,GAAY,IAAZ;AACD;;AACD,aAAOL,CAAP;AACD,KALiB,CAAlB;AAOA,SAAKM,QAAL,CAAc;AACZ1B,MAAAA,OAAO,oBACF,KAAKD,KAAL,CAAWC,OADT;AAELkB,QAAAA,IAAI,EAAEW;AAFD;AADK,KAAd;AAOD;;AACDC,EAAAA,MAAM,GAAG;AAAA,gCACqC,KAAK/B,KAAL,CAAWC,OADhD;AAAA,UACC+B,IADD,uBACCA,IADD;AAAA,UACO3B,MADP,uBACOA,MADP;AAAA,UACe4B,WADf,uBACeA,WADf;AAAA,UAC4Bd,IAD5B,uBAC4BA,IAD5B;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,OAAO,EAAE,KAAKe,WAAnB;AAAgC,MAAA,SAAS,EAAC,yBAA1C;AAAoE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BH,IAA7B,MADF,EAEE;AAAI,MAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgD3B,MAAhD,MAFF,EAGE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2B4B,WAA3B,MAHF,CAFF,CADF,CADA,EAWId,IAAI,GAAGA,IAAI,CAACC,GAAL,CAAUG,GAAG,IAAK,oBAAC,OAAD;AAAS,MAAA,iBAAiB,EAAE,KAAKrB,iBAAjC;AAAoD,MAAA,GAAG,EAAEqB,GAAG,CAACE;AAA7D,OAAsEF,GAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB,CAAH,GACN,SAZF,CADF;AAgBD;;AA7E6B;;AAgFhC,eAAe3B,UAAU,CAACC,OAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport JoblyApi from '../JoblyApi';\nimport JobCard from '../JobComponents/JobCard';\nimport uuid from 'uuid/v4';\n\nimport { withRouter } from \"react-router\";\n\nclass Company extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      company: {}\n    }\n\n    this.handleApplication = this.handleApplication.bind(this);\n  }\n\n  async componentWillMount() {\n    const { handle } = this.props.match.params;\n    const username = localStorage.getItem('username');\n    \n    \n    // This will grab all the jobs available as well as the users\n    const promises = [JoblyApi.getCompany(handle), JoblyApi.getUser(username)];\n\n    let [company, user] = await Promise.all(promises);\n    \n    const appliedJobIds = new Set(user.jobs.map(j => j.id));\n    // O ( m + n)\n    \n    let jobs = company.jobs\n    jobs = jobs.map(job => {\n      return appliedJobIds.has(job.id) ? \n        {...job, key: uuid(), applied: true} : \n        {...job, key: uuid(), applied: false} \n    });\n\n    company.jobs = jobs;\n\n    this.setState({company});\n  }\n\n  async handleApplication(jobid) {\n\n\n    const username = localStorage.getItem('username');\n    await JoblyApi.applyToJob(jobid, username, 'applied');\n\n    const { jobs } = this.state.company;\n    let updatedJobs = jobs.map(j => {\n      if (j.id === +jobid) {\n        j.applied = true;\n      }\n      return j\n    });\n\n    this.setState({\n      company: { \n        ...this.state.company,\n        jobs: updatedJobs\n      }\n    });\n\n  }\n  render() {\n    const { name, handle, description, jobs } = this.state.company;\n\n    return (\n      <div>\n      <div className=\"py-3\">\n        <div onClick={this.handleClick} className=\"card mx-auto py2 CompBG\" style={{ width: \"50rem\" }}>\n            <h2 className=\"text-white\">Company Profile</h2>\n          <div className=\"card-body ThickFont\">\n            <h5 className=\"card-title\"> {name} </h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\"> {handle} </h6>\n            <p className=\"card-text\"> {description} </p>\n          </div>\n        </div>\n      </div>\n        { jobs ? jobs.map( job =>  <JobCard handleApplication={this.handleApplication} key={job.key} {...job}/>) :\n        \"Nothing\" }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Company);\n\n"]},"metadata":{},"sourceType":"module"}